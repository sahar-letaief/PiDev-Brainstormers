<?php //App%255CEntity%255CUser%2524email

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
    ],
    null,
    [
        'stdClass' => [
            'type' => [
                'string',
            ],
            'length' => [
                180,
            ],
            'precision' => [
                null,
            ],
            'scale' => [
                null,
            ],
            'unique' => [
                true,
            ],
            'minMessage' => [
                1 => 'the email must contain at least 20 characters.',
            ],
            'min' => [
                1 => '20',
            ],
            'groups' => [
                1 => [
                    'Default',
                ],
            ],
        ],
        'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
            'groups' => [
                2 => [
                    'read:users',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
    ],
    []
); }];
