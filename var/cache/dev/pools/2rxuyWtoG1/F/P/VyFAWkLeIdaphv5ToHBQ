<?php //App%255CEntity%255CUser%2524plainPassword

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Regex'],
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
    ],
    null,
    [
        'stdClass' => [
            'message' => [
                'password must contain at least a number',
                'password must start with a letter',
            ],
            'pattern' => [
                '/\\d/',
                '/^\\w+/',
            ],
            'groups' => [
                [
                    'Default',
                ],
                [
                    'Default',
                ],
                [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
            'minMessage' => [
                2 => 'password must contain at least 8 characters.',
            ],
            'min' => [
                2 => '8',
            ],
            'maxMessage' => [
                3 => 'password must contain at most 18 characters.',
            ],
            'max' => [
                3 => '18',
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
    ],
    []
); }];
